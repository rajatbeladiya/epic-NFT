{
    "contractName": "A",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "name",
                    "type": "address"
                }
            ],
            "name": "transfer2",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"name\",\"type\":\"address\"}],\"name\":\"transfer2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Volumes/Solidity/epic-nfts/contracts/test4.sol\":\"A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Volumes/Solidity/epic-nfts/contracts/MyEpicNFT.sol\":{\"keccak256\":\"0x6993e77c0b41092a1c044d2b494db1affafbca3c6a06232ad6532f657dfdd8dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a8336d48e63d02dd7742fc0b69cbdace6bc6e8c9cdaa35d69f1d30ad75cbc267\",\"dweb:/ipfs/QmbZJ2DpvyKV4JCaoetTQ1AD1eYGc3DFtV4r7eBB6Dbsue\"]},\"/Volumes/Solidity/epic-nfts/contracts/libraries/Base64.sol\":{\"keccak256\":\"0xd0cfd7508ba00767a449d395259ad3a0aedf972a93822c88f4c4535635500c41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eba79aaba9db99b40b6e70797028a0645a2c127caabf62d1e1b48263a12367a\",\"dweb:/ipfs/QmNoKsGneyCFDPLf6H6p8m2u3YkFq9tk4M4psTth2Nx5zT\"]},\"/Volumes/Solidity/epic-nfts/contracts/test4.sol\":{\"keccak256\":\"0x1615be776e57d38e1e61918727dc0b91baf11a2987e9ead81ec4f89243c32309\",\"urls\":[\"bzz-raw://bf0722ef55d9678476fa6cdbf28d77ff4a1ecc4a2c4bad6206c96a571c9f07ec\",\"dweb:/ipfs/QmZmSbTRhLeH8ZixwNNahLJieAcJjYtr6AMjjchd8yvoPS\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"/Volumes/Solidity/epic-nfts/node_modules/hardhat/console.sol\":{\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763\",\"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b50610189806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806352d6ec7614610030575b600080fd5b61004361003e366004610101565b610045565b005b6001600160a01b0381163b61008a5760405162461bcd60e51b81526020600482015260076024820152666d65737361676560c81b604482015260640160405180910390fd5b60405163a9059cbb60e01b8152336004820152620186a060248201526001600160a01b0382169063a9059cbb906044016020604051808303816000875af11580156100d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fd9190610131565b5050565b60006020828403121561011357600080fd5b81356001600160a01b038116811461012a57600080fd5b9392505050565b60006020828403121561014357600080fd5b8151801515811461012a57600080fdfea26469706673582212207eea08d5f0c679f89b54968275e61724b8cf1c2f28a003bfa07040fb63eae60564736f6c634300080b0033",
    "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806352d6ec7614610030575b600080fd5b61004361003e366004610101565b610045565b005b6001600160a01b0381163b61008a5760405162461bcd60e51b81526020600482015260076024820152666d65737361676560c81b604482015260640160405180910390fd5b60405163a9059cbb60e01b8152336004820152620186a060248201526001600160a01b0382169063a9059cbb906044016020604051808303816000875af11580156100d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fd9190610131565b5050565b60006020828403121561011357600080fd5b81356001600160a01b038116811461012a57600080fd5b9392505050565b60006020828403121561014357600080fd5b8151801515811461012a57600080fdfea26469706673582212207eea08d5f0c679f89b54968275e61724b8cf1c2f28a003bfa07040fb63eae60564736f6c634300080b0033",
    "sourceMap": "149:201:2:-:0;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "149:201:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;202:145;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;261:15:2;;1087:20:107;253:37:2;;;;-1:-1:-1;;;253:37:2;;507:2:139;253:37:2;;;489:21:139;546:1;526:18;;;519:29;-1:-1:-1;;;564:18:139;;;557:37;611:18;;253:37:2;;;;;;;;300:40;;-1:-1:-1;;;300:40:2;;321:10;300:40;;;827:51:139;333:6:2;894:18:139;;;887:34;-1:-1:-1;;;;;300:20:2;;;;;800:18:139;;300:40:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;202:145;:::o;14:286:139:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:139;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:139:o;932:277::-;999:6;1052:2;1040:9;1031:7;1027:23;1023:32;1020:52;;;1068:1;1065;1058:12;1020:52;1100:9;1094:16;1153:5;1146:13;1139:21;1132:5;1129:32;1119:60;;1175:1;1172;1165:12",
    "sourcePath": "/Volumes/Solidity/epic-nfts/contracts/test4.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.11+commit.d7f03943"
    },
    "ast": {
        "absolutePath": "/Volumes/Solidity/epic-nfts/contracts/test4.sol",
        "exportedSymbols": {
            "A": [
                431
            ],
            "Address": [
                16113
            ],
            "Base64": [
                401
            ],
            "Context": [
                16220
            ],
            "Counters": [
                16294
            ],
            "ERC165": [
                17982
            ],
            "ERC20": [
                10393
            ],
            "ERC721": [
                13505
            ],
            "ERC721URIStorage": [
                14172
            ],
            "IERC165": [
                18306
            ],
            "IERC20": [
                10471
            ],
            "IERC20Metadata": [
                11965
            ],
            "IERC721": [
                13621
            ],
            "IERC721Metadata": [
                14230
            ],
            "IERC721Receiver": [
                13639
            ],
            "MyEpicNFT": [
                343
            ],
            "Strings": [
                16723
            ],
            "console": [
                28548
            ]
        },
        "id": 432,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 403,
                "literals": [
                    "solidity",
                    "0.8",
                    ".11"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:23:2"
            },
            {
                "absolutePath": "/Volumes/Solidity/epic-nfts/contracts/MyEpicNFT.sol",
                "file": "./MyEpicNFT.sol",
                "id": 404,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 432,
                "sourceUnit": 344,
                "src": "25:25:2",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "/Volumes/Solidity/epic-nfts/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 405,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 432,
                "sourceUnit": 10394,
                "src": "51:96:2",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "A",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 431,
                "linearizedBaseContracts": [
                    431
                ],
                "name": "A",
                "nameLocation": "158:1:2",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 408,
                        "libraryName": {
                            "id": 406,
                            "name": "Address",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 16113,
                            "src": "172:7:2"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "166:26:2",
                        "typeName": {
                            "id": 407,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "184:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        }
                    },
                    {
                        "body": {
                            "id": 429,
                            "nodeType": "Block",
                            "src": "243:104:2",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "id": 414,
                                                        "name": "name",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 410,
                                                        "src": "261:4:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "id": 415,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "isContract",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 15836,
                                                    "src": "261:15:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                                        "typeString": "function (address) view returns (bool)"
                                                    }
                                                },
                                                "id": 416,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "261:17:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "6d657373616765",
                                                "id": 417,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "280:9:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c2baf6c66618acd49fb133cebc22f55bd907fe9f0d69a726d45b7539ba6bbe08",
                                                    "typeString": "literal_string \"message\""
                                                },
                                                "value": "message"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_c2baf6c66618acd49fb133cebc22f55bd907fe9f0d69a726d45b7539ba6bbe08",
                                                    "typeString": "literal_string \"message\""
                                                }
                                            ],
                                            "id": 413,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "253:7:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 418,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "253:37:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 419,
                                    "nodeType": "ExpressionStatement",
                                    "src": "253:37:2"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 424,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "321:3:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 425,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "321:10:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "313030303030",
                                                "id": 426,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "333:6:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_100000_by_1",
                                                    "typeString": "int_const 100000"
                                                },
                                                "value": "100000"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_100000_by_1",
                                                    "typeString": "int_const 100000"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 421,
                                                        "name": "name",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 410,
                                                        "src": "306:4:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 420,
                                                    "name": "ERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10393,
                                                    "src": "300:5:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$10393_$",
                                                        "typeString": "type(contract ERC20)"
                                                    }
                                                },
                                                "id": 422,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "300:11:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_ERC20_$10393",
                                                    "typeString": "contract ERC20"
                                                }
                                            },
                                            "id": 423,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 9967,
                                            "src": "300:20:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 427,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "300:40:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 428,
                                    "nodeType": "ExpressionStatement",
                                    "src": "300:40:2"
                                }
                            ]
                        },
                        "functionSelector": "52d6ec76",
                        "id": 430,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer2",
                        "nameLocation": "211:9:2",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 411,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 410,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nameLocation": "229:4:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 430,
                                    "src": "221:12:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 409,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "221:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "220:14:2"
                        },
                        "returnParameters": {
                            "id": 412,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "243:0:2"
                        },
                        "scope": 431,
                        "src": "202:145:2",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 432,
                "src": "149:201:2",
                "usedErrors": []
            }
        ],
        "src": "0:350:2"
    },
    "functionHashes": {
        "transfer2(address)": "52d6ec76"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "78600",
            "executionCost": "129",
            "totalCost": "78729"
        },
        "external": {
            "transfer2(address)": "infinite"
        }
    }
}